{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORK\\\\\\u0421\\u043E\\u0444\\u0442\\u0423\\u043D\\u0438\\\\ReactJS\\\\06-ReactMealOrder\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport classes from './AvailableMeals.module.css';\nimport MealItem from './MealItem/MealItem';\nimport Card from '../UI/Card';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      setIsLoading(true);\n      const response = await fetch('https://meal-orderlist-reactjs-default-rtdb.europe-west1.firebasedatabase.app/meals.json');\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes['meals-loading'],\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes['meals-loading'],\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    meal: meal,\n    children: meal.name\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 43\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n};\n_s(AvailableMeals, \"GNhuq97CrYTRGtb4EdV+fANyLyQ=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["classes","MealItem","Card","useEffect","useState","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mealsList","map","meal","_c","$RefreshReg$"],"sources":["D:/WORK/СофтУни/ReactJS/06-ReactMealOrder/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import classes from './AvailableMeals.module.css'\r\nimport MealItem from './MealItem/MealItem';\r\nimport Card from '../UI/Card';\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\nconst AvailableMeals = ()=>{\r\n    const [meals, setMeals] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [httpError, setHttpError] = useState(null)\r\n\r\n\r\n    useEffect(()=>{\r\n      const fetchMeals = async ()=>{\r\n        setIsLoading(true)\r\n        const response = await fetch('https://meal-orderlist-reactjs-default-rtdb.europe-west1.firebasedatabase.app/meals.json');\r\n        const responseData = await response.json()\r\n        \r\n        const loadedMeals = []\r\n\r\n        for(const key in responseData){\r\n          loadedMeals.push({\r\n            id:key,\r\n            name: responseData[key].name,\r\n            description:responseData[key].description,\r\n            price:responseData[key].price,\r\n          })\r\n        }\r\n        setMeals(loadedMeals)\r\n        setIsLoading(false)\r\n      }\r\n      fetchMeals().catch((error)=>{\r\n        setIsLoading(false)\r\n        setHttpError(error.message)\r\n      })\r\n    }, [])\r\n\r\n    if(isLoading){\r\n      return <section className={classes['meals-loading']}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    }\r\n\r\n\r\n    if(httpError){\r\n      return <section className={classes['meals-loading']}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    }\r\n    const mealsList = meals.map((meal) => <MealItem key={meal.id} meal={meal}>{meal.name}</MealItem>)\r\n\r\n    return <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n}\r\n\r\nexport default AvailableMeals;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}