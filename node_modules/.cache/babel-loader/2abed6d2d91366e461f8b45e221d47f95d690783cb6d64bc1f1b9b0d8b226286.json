{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORK\\\\\\u0421\\u043E\\u0444\\u0442\\u0423\\u043D\\u0438\\\\ReactJS\\\\06-ReactMealOrder\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === '';\nconst isFiveChars = value => value.trim().length === 5;\nconst Checkout = props => {\n  _s();\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postalCode: enteredPostalCode,\n      city: enteredCityIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalCodeIsValid && enteredCityIsValid;\n    if (!formIsValid) {\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), !formInputValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), !formInputValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code!(5 character)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n};\n_s(Checkout, \"eM0GoSYQBoJr4wqWNgGPvqwVhRg=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useRef","useState","jsxDEV","_jsxDEV","isEmpty","value","trim","isFiveChars","length","Checkout","props","_s","formInputValidity","setFormInputValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","enteredCityIsValid","formIsValid","onSubmit","children","className","control","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","actions","onClick","onCancel","submit","_c","$RefreshReg$"],"sources":["D:/WORK/СофтУни/ReactJS/06-ReactMealOrder/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css'\r\nimport {useRef, useState} from 'react'\r\nconst isEmpty = value =>value.trim()===''\r\nconst isFiveChars = value => value.trim().length ===5;\r\n\r\nconst Checkout= props=>{\r\n    const [formInputValidity, setFormInputValidity] = useState({\r\n        name:true, \r\n        street:true,\r\n        city:true,\r\n        postalCode:true,\r\n    })\r\n    const nameInputRef = useRef()\r\n    const streetInputRef = useRef()\r\n    const postalCodeInputRef = useRef()\r\n    const cityInputRef = useRef()\r\n\r\n\r\n    const confirmHandler = (event)=>{\r\n        event.preventDefault()\r\n\r\n        const enteredName = nameInputRef.current.value\r\n        const enteredStreet = streetInputRef.current.value\r\n        const enteredPostalCode = postalCodeInputRef.current.value\r\n        const enteredCity = cityInputRef.current.value\r\n        \r\n        const enteredNameIsValid = !isEmpty(enteredName)\r\n        const enteredStreetIsValid = !isEmpty(enteredStreet)\r\n        const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode)\r\n        const enteredCityIsValid = !isEmpty(enteredCity)\r\n\r\n        setFormInputValidity({\r\n            name:enteredNameIsValid,\r\n            street:enteredStreetIsValid,\r\n            postalCode: enteredPostalCode,\r\n            city: enteredCityIsValid\r\n        })\r\n        const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalCodeIsValid && enteredCityIsValid\r\n\r\n        if(!formIsValid){\r\n            return;\r\n        }\r\n    }\r\n\r\n    return <form onSubmit={confirmHandler}>\r\n        <div className={`${classes.control} ${formInputValidity.name ? '' : classes.invalid}`}>\r\n            <label htmlFor='name'>Your name</label>\r\n            <input type='text' id='name' ref={nameInputRef}></input>\r\n            {!formInputValidity.name && <p>Please enter a valid name!</p>}\r\n        </div>\r\n        <div className={classes.control}>\r\n            <label htmlFor='street'>Street</label>\r\n            <input type='text' id='street' ref={streetInputRef}></input>\r\n            {!formInputValidity.street && <p>Please enter a valid street!</p>}\r\n\r\n        </div>\r\n        <div className={classes.control}>\r\n            <label htmlFor='postal'>Postal</label>\r\n            <input type='text' id='postal' ref={postalCodeInputRef}></input>\r\n            {!formInputValidity.postalCode && <p>Please enter a valid postal code!(5 character)</p>}\r\n\r\n        </div>\r\n        <div className={classes.control}>\r\n            <label htmlFor='city'>City</label>\r\n            <input type='text' id='city' ref={cityInputRef}></input>\r\n            {!formInputValidity.city && <p>Please enter a valid city!</p>}\r\n\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button onClick={props.onCancel}>Cancel</button>\r\n            <button className={classes.submit}>Confirm</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default Checkout"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}